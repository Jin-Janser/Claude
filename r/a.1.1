# 필요한 패키지 로드
library(tidyverse)
library(corrplot)
library(GGally)
library(psych)

# 1. 데이터 로딩 및 전처리
# 실제 환경: df <- read.csv("your_path.csv")
# 시뮬레이션 데이터 생성
set.seed(42)
n <- 1000

# 상관관계를 가진 점수 생성
library(MASS)
mu <- c(66, 69, 68)
sigma <- matrix(c(232, 180, 185,
                  180, 212, 190,
                  185, 190, 230), nrow=3)

scores <- mvrnorm(n, mu, sigma)
scores <- pmax(pmin(scores, 100), 0)  # 0-100 범위로 제한

df <- data.frame(
  gender = sample(c('male', 'female'), n, replace=TRUE, prob=c(0.484, 0.516)),
  math_score = scores[,1],
  reading_score = scores[,2],
  writing_score = scores[,3]
)

cat("=== 데이터 기본 정보 ===\n")
cat("데이터 크기:", dim(df), "\n")
cat("결측치 개수:", sum(is.na(df)), "\n")

# 2. 기술통계량 계산
score_cols <- c("math_score", "reading_score", "writing_score")
desc_stats <- describe(df[score_cols])

cat("\n=== 기술통계량 ===\n")
print(desc_stats)

# 3. 분포 시각화
# 히스토그램
p1 <- df %>%
  pivot_longer(cols = all_of(score_cols), names_to = "subject", values_to = "score") %>%
  ggplot(aes(x = score)) +
  geom_histogram(bins = 25, fill = "skyblue", color = "black", alpha = 0.7) +
  geom_vline(aes(xintercept = mean(score)), color = "red", linetype = "dashed") +
  geom_vline(aes(xintercept = median(score)), color = "green", linetype = "dashed") +
  facet_wrap(~subject, scales = "free") +
  labs(title = "과목별 점수 분포 히스토그램", x = "점수", y = "빈도") +
  theme_minimal()

print(p1)

# 박스플롯
p2 <- df %>%
  pivot_longer(cols = all_of(score_cols), names_to = "subject", values_to = "score") %>%
  ggplot(aes(x = subject, y = score)) +
  geom_boxplot(fill = "lightblue", alpha = 0.7) +
  labs(title = "과목별 점수 박스플롯", x = "과목", y = "점수") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

print(p2)

# 4. 상관관계 분석
correlation_matrix <- cor(df[score_cols])
cat("\n=== 상관계수 행렬 ===\n")
print(correlation_matrix)

# 상관계수 유의성 검정
cor_test_results <- corr.test(df[score_cols])
cat("\n=== 상관계수 p-값 ===\n")
print(cor_test_results$p)

# 산점도 행렬
p3 <- ggpairs(df[score_cols], 
              title = "점수 간 산점도 행렬",
              lower = list(continuous = "smooth"),
              upper = list(continuous = "cor"))
print(p3)

# 상관계수 시각화
corrplot(correlation_matrix, method = "color", type = "upper", 
         addCoef.col = "black", tl.cex = 0.8, number.cex = 0.8)
title("과목별 상관계수 히트맵")
